# Docker-Compose V2

name: databases_lab

services:
    postgres:
        image: postgres:${POSTGRES_VERSION:-latest}
        container_name: postgres_container
        restart: unless-stopped
        environment:
            POSTGRES_USER: ${POSTGRES_USER:-postgres}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
        healthcheck:
            test: ["CMD", "pg_isready", "-U", "postgres"]
            interval: 10s
            timeout: 10s
            retries: 5
            start_period: 40s
        logging:
            options:
                max-size: 10m
                max-file: "3"
        ports:
            - '5432:5432'
        volumes:
            - ./postgres/sql/create_tables.sql:/docker-entrypoint-initdb.d/create_tables.sql:ro,Z
            - ./postgres/sql/fill_tables.sql:/docker-entrypoint-initdb.d/fill_tables.sql:ro,Z
        networks:
            - databases

    pgadmin:
        image: dpage/pgadmin4:${PGADMIN_VERSION:-latest}
        container_name: pgadmin_container
        restart: unless-stopped
        depends_on:
            postgres:
                condition: service_healthy
        environment:
            PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
            PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
            PGADMIN_CONFIG_SERVER_MODE: 'False'
        healthcheck:
            test: ["CMD", "wget", "-O", "-", "http://localhost:80/misc/ping"]
            interval: 10s
            timeout: 10s
            retries: 5
            start_period: 40s
        ports:
            - "${PGADMIN_PORT:-5050}:80"
        volumes:
            - ./postgres/servers.json:/pgadmin4/servers.json:ro,Z
        networks:
            - databases

    mongo:
        image: mongo:${MONGO_VERSION:-latest}
        container_name: mongodb_container
        restart: unless-stopped
        environment:
            MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME:-root}
            MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD:-root}
        healthcheck:
            test: echo 'db.stats().ok' | mongosh localhost:27017/db --quiet
            interval: 10s
            timeout: 10s
            retries: 5
            start_period: 40s
        ports:
            - "27017:27017"
        volumes:
            - ./mongo/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
        networks:
            - databases
        
  #---------------------------------------------------------------------------------------------------------------------
    mongo-express:
        image: mongo-express:${MONGO_EXPRESS_VERSION:-latest}
        container_name: mongodb-express
        restart: unless-stopped
        depends_on:
            mongo:
                condition: service_healthy
        environment:
            ME_CONFIG_MONGODB_ADMINUSERNAME: ${ME_CONFIG_MONGODB_ADMINUSERNAME:-root}
            ME_CONFIG_MONGODB_ADMINPASSWORD: ${ME_CONFIG_MONGODB_ADMINPASSWORD:-root}
            ME_CONFIG_BASICAUTH_USERNAME: ${ME_CONFIG_BASICAUTH_USERNAME:-root}
            ME_CONFIG_BASICAUTH_PASSWORD: ${ME_CONFIG_BASICAUTH_PASSWORD:-root}
            ME_CONFIG_MONGODB_SERVER: mongo
            ME_CONFIG_MONGODB_PORT: 27017
        ports:
            - "8081:8081"
        networks:
            - databases
        links:
            - mongo

networks:
    databases:
        driver: bridge